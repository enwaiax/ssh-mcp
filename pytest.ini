# {{RIPER-5:
#   Action: "Added"
#   Task_ID: "7037bed8-d479-44e6-9198-c81f69b9d05d"
#   Timestamp: "2025-08-05T20:50:09+08:00"
#   Authoring_Role: "LD"
#   Principle_Applied: "DRY (不重复原则) + 测试配置标准化"
#   Quality_Check: "pytest配置优化，支持异步测试、覆盖率检查、并行执行"
# }}
# {{START_MODIFICATIONS}}
[pytest]
# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version requirements
minversion = 7.0

# Required plugins
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=python_src/python_ssh_mcp
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=30
    --asyncio-mode=auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interaction
    ssh: Tests requiring SSH connection mocking
    mcp: Tests for MCP tool functionality
    cli: Tests for CLI parsing and validation
    slow: Tests that take longer to run
    security: Tests for security validation
    performance: Performance and load tests

# Asyncio configuration
asyncio_mode = auto

# Test timeout (pytest-timeout plugin required)
# timeout = 300

# Parallel execution
# Uncomment the following lines if pytest-xdist is available
# addopts = -n auto

# Filtering options
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage configuration
[coverage:run]
source = python_src/python_ssh_mcp
branch = true
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */.venv/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = true
skip_covered = false

[coverage:html]
directory = htmlcov
title = FastMCP SSH Server Test Coverage

[coverage:xml]
output = coverage.xml
# {{END_MODIFICATIONS}}